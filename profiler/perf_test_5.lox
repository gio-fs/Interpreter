{
    print "=== Test: Instance Circular References ===";

    class Node {
        init(value) {
            this.value = value;
            this.next = nil;
        }
    }

    var start = clock();
    var a = Node(1);
    var b = Node(2);
    var c = Node(3);

    // Create cycle: a → b → c → a
    a.next = b;
    b.next = c;
    c.next = a;

    print "Created cycle";

    // Force GC
    for i in [1..1000000] {
        var arr = [];
        for i in [1..10] {
            arr.add(Node(i));
        }
    }

    print "After GC";

    // Verify cycle
    if (a.next.next.next != a) {
        print "ERROR: Cycle broken!";
    } else {
        print "✓ Cycle preserved";
    }

    var end = clock();
    print "Elapsed time: ${end-start}";
}
